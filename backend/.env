# =============================================================================
# Imageon Backend Environment Configuration
# =============================================================================

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
NODE_ENV=development
PORT=3001
HOST=localhost

# =============================================================================
# AWS CONFIGURATION
# =============================================================================
AWS_REGION=af-south-1
AWS_ACCESS_KEY_ID=AKIAT24FH6PX4G74NANJ
AWS_SECRET_ACCESS_KEY=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

# =============================================================================
# DYNAMODB CONFIGURATION
# =============================================================================
# Local DynamoDB endpoint (for development)
DYNAMODB_ENDPOINT=http://localhost:8000

# Table names
DYNAMODB_TABLE_NAME=ImageonApp
DYNAMODB_LOCAL_TABLE_NAME=ImageonApp-Local

# Multi-table names
DYNAMODB_USERS_TABLE=Users
DYNAMODB_POSTS_TABLE=Posts
DYNAMODB_LIKES_TABLE=Likes
DYNAMODB_FOLLOWS_TABLE=Follows

# =============================================================================
# REDIS CONFIGURATION (Optional - for caching)
# =============================================================================
REDIS_URL=redis://localhost:6379
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# =============================================================================
# JWT CONFIGURATION (For future authentication)
# =============================================================================
JWT_SECRET=your-super-secret-jwt-key-change-in-production
JWT_EXPIRES_IN=7d
JWT_REFRESH_SECRET=your-super-secret-refresh-key-change-in-production
JWT_REFRESH_EXPIRES_IN=30d

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# Rate limiting
RATE_LIMIT_WINDOW_MS=900000  # 15 minutes
RATE_LIMIT_MAX_REQUESTS=100  # requests per window

# CORS
CORS_ORIGIN=http://localhost:5173
CORS_CREDENTIALS=true

# =============================================================================
# FILE UPLOAD CONFIGURATION
# =============================================================================
# Maximum file size (10MB)
MAX_FILE_SIZE=10485760
UPLOAD_PATH=./uploads

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
LOG_LEVEL=info
LOG_FILE=./logs/app.log

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================
# Enable detailed error messages in development
SHOW_ERROR_DETAILS=true

# =============================================================================
# PRODUCTION CONFIGURATION
# =============================================================================
# Set to true in production
NODE_ENV=development
# Disable detailed error messages in production
SHOW_ERROR_DETAILS=false

# =============================================================================
# MONITORING CONFIGURATION
# =============================================================================
# Health check endpoint
HEALTH_CHECK_ENDPOINT=/health

# =============================================================================
# API CONFIGURATION
# =============================================================================
# API version
API_VERSION=v1
API_PREFIX=/api

# =============================================================================
# CACHE CONFIGURATION
# =============================================================================
# Cache TTL in seconds
CACHE_TTL=3600  # 1 hour
CACHE_ENABLED=true

# =============================================================================
# VALIDATION CONFIGURATION
# =============================================================================
# Username validation
USERNAME_MIN_LENGTH=3
USERNAME_MAX_LENGTH=30
USERNAME_PATTERN=^[a-zA-Z0-9_-]+$

# Password validation (for future use)
PASSWORD_MIN_LENGTH=8
PASSWORD_MAX_LENGTH=128

# =============================================================================
# PAGINATION CONFIGURATION
# =============================================================================
DEFAULT_PAGE_SIZE=20
MAX_PAGE_SIZE=100

# =============================================================================
# FEATURE FLAGS
# =============================================================================
# Enable/disable features
ENABLE_USER_REGISTRATION=true
ENABLE_USER_DELETION=true
ENABLE_USER_UPDATES=true
ENABLE_USER_SEARCH=true

# =============================================================================
# EXTERNAL SERVICES (Future use)
# =============================================================================
# Email service (for future use)
EMAIL_SERVICE_URL=
EMAIL_SERVICE_API_KEY=

# Image storage (for future use)
IMAGE_STORAGE_BUCKET=
IMAGE_STORAGE_REGION=

# =============================================================================
# TESTING CONFIGURATION
# =============================================================================
# Test database endpoint
TEST_DYNAMODB_ENDPOINT=http://localhost:8000
TEST_REDIS_URL=redis://localhost:6379

# =============================================================================
# DEPLOYMENT CONFIGURATION
# =============================================================================
# Docker configuration
DOCKER_IMAGE_NAME=imageon-backend
DOCKER_IMAGE_TAG=latest

# =============================================================================
# NOTES
# =============================================================================
# 1. Change all secrets in production
# 2. Use strong JWT secrets
# 3. Configure proper CORS origins
# 4. Set up proper logging
# 5. Configure rate limiting based on your needs
# 6. Set up monitoring and health checks
# 7. Configure file upload limits
# 8. Set up proper error handling